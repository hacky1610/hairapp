<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EveryDays" xml:space="preserve">
    <value>Tous les {count}  jours</value>
  </data>
  <data name="EveryDay" xml:space="preserve">
    <value>Tous les jours</value>
  </data>
  <data name="EveryWeek" xml:space="preserve">
    <value>Tous les {days} toutes les {count} semaines</value>
  </data>
  <data name="MonthlyText" xml:space="preserve">
    <value>À {occurrence} {jour} tous les {mois} mois</value>
  </data>
  <data name="Daily" xml:space="preserve">
    <value>du quotidien</value>
  </data>
  <data name="Monthly" xml:space="preserve">
    <value>Mensuelle</value>
  </data>
  <data name="Weekly" xml:space="preserve">
    <value>Hebdomadaire</value>
  </data>
  <data name="Yearly" xml:space="preserve">
    <value>Annuelle</value>
  </data>
  <data name="First" xml:space="preserve">
    <value>Première</value>
  </data>
  <data name="Second" xml:space="preserve">
    <value>Seconde</value>
  </data>
  <data name="Third" xml:space="preserve">
    <value>Troisième</value>
  </data>
  <data name="Fourth" xml:space="preserve">
    <value>Quatrième</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>Dernière</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Lundi</value>
  </data>
  <data name="Tuesdays" xml:space="preserve">
    <value>Mardi</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Mercredi</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Jeudi</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Vendredi</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Samedi</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Dimanche</value>
  </data>
  <data name="TimeForHairCare" xml:space="preserve">
    <value>Temps pour le soin des cheveux</value>
  </data>
  <data name="TodayIs" xml:space="preserve">
    <value>Aujourd'hui c'est:</value>
  </data>
  <data name="ReminderForHairCare" xml:space="preserve">
    <value>Rappel pour le soin des cheveux</value>
  </data>
  <data name="TomorrowIs" xml:space="preserve">
    <value>Demain est:</value>
  </data>
  <data name="Prepoo" xml:space="preserve">
    <value>Pre-poo</value>
  </data>
  <data name="PrepooDescription" xml:space="preserve">
    <value>un traitement à l'huile appliqué sur les cheveux avant le shampooing ou le conditionnement</value>
  </data>
  <data name="HotOilTreatmentDescription" xml:space="preserve">
    <value>Lave tes cheveux. Faire un bain d'eau. Chauffez votre huile de noix de coco. Cheveux mouillés, si ce n'est déjà fait. Masser l'huile dans votre cuir chevelu du bout des doigts trempé dans l'huile chaude. Chauffez une serviette avec un sèche-cheveux ou un sèche-linge. Laver et rincer les cheveux à fond</value>
  </data>
  <data name="HotOilTreatment" xml:space="preserve">
    <value>Traitement à l'huile chaude</value>
  </data>
  <data name="Shampoo" xml:space="preserve">
    <value>Shampoo</value>
  </data>
  <data name="ShampooDescription" xml:space="preserve">
    <value>Lavez vos cheveux avec du shampooing</value>
  </data>
  <data name="ClarifyingShampooDescription" xml:space="preserve">
    <value>Pour les meilleurs résultats. massez le shampooing clarifiant dans vos racines, là où la plupart des produits sont accumulés, puis faites-le pénétrer dans le reste des cheveux.</value>
  </data>
  <data name="ClarifyingShampoo" xml:space="preserve">
    <value>Clarifying Shampoo</value>
  </data>
  <data name="ConditionerDescription" xml:space="preserve">
    <value>Lave tes cheveux Rince ton shampooing. Essore tes cheveux. Mettez votre couleur.
Laissez le rinçage prendre effet. Rincez le rinçage</value>
  </data>
  <data name="Conditioner" xml:space="preserve">
    <value>Conditioner</value>
  </data>
  <data name="DeepConditioner" xml:space="preserve">
    <value>Deep Conditioner</value>
  </data>
  <data name="DeepConditionerDescription" xml:space="preserve">
    <value>Après avoir appliqué un revitalisant en profondeur, couvrez vos cheveux avec un bonnet de douche ou un sac en plastique et ajoutez du feu doux (enveloppez une serviette chaude et humide autour de votre tête). Cela ouvre la cuticule et permet au revitalisant en profondeur de pénétrer dans vos cheveux. Laissez dans le DC pendant au moins 20 minutes (nous recommandons 20-40.)</value>
  </data>
  <data name="ProteinTreatment" xml:space="preserve">
    <value>Protein Treatment</value>
  </data>
  <data name="ProteinTreatmentDescription" xml:space="preserve">
    <value>Tout comme votre corps, vos cheveux ont besoin de protéines pour rester en bonne santé. ... Les traitements protéiques renforcent les cheveux avec une variété de nutriments et de protéines pour aider à reconstruire et renforcer les mèches de cheveux.</value>
  </data>
  <data name="MoisturisingMask" xml:space="preserve">
    <value>Moisturising mask </value>
  </data>
  <data name="MoisturisingMaskDescription" xml:space="preserve">
    <value>Séparez vos cheveux au centre et commencez par les appliquer sur votre cuir chevelu. Laissez ce masque reposer pendant 30 à 45 minutes, puis rincez-le avec votre shampooing et votre revitalisant ordinaires. Ce masque est le meilleur et le plus efficace s'il est utilisé un par semaine</value>
  </data>
  <data name="LeaveInConditioner" xml:space="preserve">
    <value>Leave in Conditioner</value>
  </data>
  <data name="LeaveInConditionerDescription" xml:space="preserve">
    <value>Lavez vos cheveux avec un shampooing et appliquez le revitalisant, ajoutez une petite quantité de sérum à votre paume, appliquez le produit sur vos cheveux et peignez vos cheveux.</value>
  </data>
  <data name="Clay" xml:space="preserve">
    <value>Argile</value>
  </data>
  <data name="ClayDescription" xml:space="preserve">
    <value>Rincez vos cheveux avec de l'eau pour les mouiller. Ramassez une poignée de cheveux à la fois et appliquez le masque en argile de bentonite des racines aux pointes. Si vos cheveux commencent à sécher, humidifiez-les à nouveau à l'aide d'un vaporisateur. Roulez vos cheveux et mettez un bonnet de douche</value>
  </data>
  <data name="Rinse" xml:space="preserve">
    <value>Rincer</value>
  </data>
  <data name="RinseDescription" xml:space="preserve">
    <value>Lave tes cheveux Rincez-le. Appliquez une petite quantité de conditionneur et massez les cheveux. Attends deux minutes. Rincer les cheveux.</value>
  </data>
</root>